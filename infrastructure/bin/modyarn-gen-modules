#!/usr/bin/perl -w

# $OpenBSD$

# Copyright (c) 2024 Fabien Romano <fabien@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use 5.012;
use strict;
use warnings;

die if @ARGV < 1;

my $dists_yarn = ();
my $dists_npm = ();
my $dists_github = ();

while (my $file = shift) {

	open my $h, '<', $file or die $!;

	my $version;
	my $id;
	my $account;
	my $project;
	my $type;
	my $dist;
	my $dists;
	my $k;
	my $v;
	while(my $line = <$h>) {
		$line =~ s/\R//g;
		if ('#' eq substr $line, 0) {next;}
		if ($line =~ /^\s*$/) {next;}
		if (':' eq substr $line, -1) {next;}
		$line =~ s/^\s+|\s+$//g;
		($k, $v) = split " ", $line, 2;
		$k =~ s/^\s+|\s+$//g; $k =~ s/"//g;
		$v =~ s/^\s+|\s+$//g; $v =~ s/"//g;
		if ($k eq "version") {
			$version = $v;
			next;
		}
		if ($k ne "resolved") {next;}
		$account = "";
		$project = "";
		$id = $v;
		if (index($id, "https://registry.yarnpkg.com/") == 0) {
			$id =~ s|https://registry.yarnpkg.com/||;
			$id =~ s|/\-/.*||;
			$project = $id;
			$type = "yarn";
			$dists = \@{$dists_yarn};
		}
		elsif (index($id, "https://registry.npmjs.org/") == 0) {
			$id =~ s|https://registry.npmjs.org/||;
			$id =~ s|/-/.*||;
			$project = $id;
			$type = "npm";
			$dists = \@{$dists_npm};
		}
		elsif (index($id, "https://codeload.github.com/") == 0) {
			$id =~ s|https://codeload.github.com/||;
			$version = $id;
			$version =~ s|.*/tar.gz/||;
			$id =~ s|/tar.gz/.*||;
			$project = $id;
			$type = "codeload";
			$dists = \@{$dists_github};
		}
		elsif (index($id, "https://github.com/") == 0) {
			$id =~ s|https://github.com/||;
			$version = $id;
			$version =~ s|.*git#||;
			$id =~ s|.git#.*||;
			$project = $id;
			$type = "github";
			$dists = \@{$dists_github};
		}
		if (not $project) {
			say STDERR "invalid resolved : " . $id;
			next;
		}
		if ($type eq "npm" or $type eq "yarn") {
			$dist = "\${MODNPM_DIST}/";
			if (scalar $id =~ /\Q\//g) {
				($account, $project) = split '/', $id;
				$dist .= $account."-";
			}
			$dist .= "{".$id."/-/}".$project."-".$version.".tgz";
		} else {
			$dist = "\${MODYARN_DIST}/";
			($account, $project) = split '/', $id;
			if ($type eq "github") {
				$dist .= $account."%".$project.".git-";
			} else {
				$dist .= $account."-".$project."%";
			}
			$dist .= "{".$id."/archive/}".$version;
			$dist .= "\${EXTRACT_SUFX.github}";
		}
		push @{$dists}, $dist;
	}
}

sub uniq {
	my %seen;
	grep !$seen{$_}++, @_;
}

say "DISTFILES.yarn += \\";
foreach my $dist (uniq sort @{$dists_yarn}) {
	say $dist." \\";
}
say "";

if ($dists_npm) {
	say "DISTFILES.npm += \\";
	foreach my $dist (uniq sort @{$dists_npm}) {
		say $dist." \\";
	}
	say "";
}
if ($dists_github) {
	say "DISTFILES.github += \\";
	foreach my $dist (uniq sort @{$dists_github}) {
		say $dist." \\";
	}
	say "";
}