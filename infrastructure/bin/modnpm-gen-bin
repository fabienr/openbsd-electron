#!/usr/bin/perl -w

# $OpenBSD$

# Copyright (c) 2024 Fabien Romano <fabien@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all cp.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use 5.012;
use strict;
use warnings;
use JSON::PP;
use File::Basename;

die if @ARGV < 2;

my $wrksrc = shift;

my $bins = ();

# from Port.pm
sub get_json_file
{
	my ( $file, ) = @_;

	open my $h, '<', $file or die $!;
	my $data = do { local $/ = undef; <$h> };
	return decode_json $data;
}

sub scan_bin
{
	my ( $workdir, $name, $bin ) = @_;
	my $dir = $workdir/$name/$bin;
	opendir(D, "$dir") || die "Can't open directory $dir: $!\n";
	my @names = readdir(D);
	closedir(D);

	$workdir =~ s/$wrksrc//;
	foreach my $file (@names) {
		next if ($file eq ".");
		next if ($file eq "..");
		push @{$bins},
			"$workdir/$name/$bin/$file;".
			"$workdir/.bin/$file";
	}
}

sub scan_node
{
	my ( $workdir, $name, $node ) = @_;
	if (exists $node->{bin} && ref($node->{bin}) eq "HASH") {
		$workdir =~ s/$wrksrc//;
		foreach my $bin (keys %{$node->{bin}}) {
			push @{$bins},
				"$workdir/$name/$node->{bin}{$bin};".
				"$workdir/.bin/$bin";
		}
	} elsif (exists $node->{bin}) {
		$workdir =~ s/$wrksrc//;
		push @{$bins},
			"$workdir/$name/$node->{bin};".
			"$workdir/.bin/$node->{name}";
	} elsif (exists $node->{directories}{bin}) {
		scan_bin($workdir, $name, $node->{directories}{bin});
	}
}

while (my $workdir = shift) {
	$workdir .= "/node_modules";
	chdir($workdir) or die "Unable to enter dir $workdir:$!\n";
	opendir(DIR, ".") or die "Unable to open $workdir:$!\n";
	my @names = readdir(DIR) or die "Unable to read $workdir:$!\n";
	closedir(DIR);

	foreach my $name (@names){
		next if ($name eq "."); 
		next if ($name eq "..");

		if (-r "$name/package.json") {
			my $node = get_json_file("$name/package.json");
			scan_node($workdir, $name, $node);
		}
	}
}

say "MODNPM_BIN += \\";
foreach my $l (sort @{$bins}) {
	say $l." \\";
}
say "";

