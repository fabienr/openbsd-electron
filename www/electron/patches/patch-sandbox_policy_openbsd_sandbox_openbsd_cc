use electron specific files.
strsep unveil lines by tabulation, allow space in path.
allow unveil failures to list non-existent directories.

Index: sandbox/policy/openbsd/sandbox_openbsd.cc
--- sandbox/policy/openbsd/sandbox_openbsd.cc.orig
+++ sandbox/policy/openbsd/sandbox_openbsd.cc
@@ -65,11 +65,11 @@
 
 #define MAXTOKENS	3
 
-#define _UNVEIL_MAIN		"/etc/chromium/unveil.main";
-#define _UNVEIL_GPU		"/etc/chromium/unveil.gpu";
-#define _UNVEIL_UTILITY_NETWORK	"/etc/chromium/unveil.utility_network";
-#define _UNVEIL_UTILITY_AUDIO	"/etc/chromium/unveil.utility_audio";
-#define _UNVEIL_UTILITY_VIDEO	"/etc/chromium/unveil.utility_video";
+#define _UNVEIL_MAIN		"/etc/electron/unveil.main";
+#define _UNVEIL_GPU		"/etc/electron/unveil.gpu";
+#define _UNVEIL_UTILITY_NETWORK	"/etc/electron/unveil.utility_network";
+#define _UNVEIL_UTILITY_AUDIO	"/etc/electron/unveil.utility_audio";
+#define _UNVEIL_UTILITY_VIDEO	"/etc/electron/unveil.utility_video";
 
 namespace sandbox {
 namespace policy {
@@ -234,7 +234,7 @@ bool SandboxLinux::SetUnveil(const std::string process
         continue;
 
       for (ap = tokens; ap < &tokens[MAXTOKENS - 1] &&
-          (*ap = strsep(&cp, " \t")) != NULL;) {
+          (*ap = strsep(&cp, "\t")) != NULL;) {
         if (**ap != '\0')
           ap++;
       }
@@ -261,7 +261,6 @@ bool SandboxLinux::SetUnveil(const std::string process
 
       if (unveil(path, tokens[1]) == -1) {
         LOG(ERROR) << "failed unveiling " << path << " with permissions " << tokens[1];
-        _exit(1);
       } else {
         VLOG(5) << "unveiling " << path << " with permissions " << tokens[1];
       }
@@ -320,7 +319,7 @@ bool SandboxLinux::InitializeSandbox(sandbox::mojom::S
 
   switch(sandbox_type) {
     case sandbox::mojom::Sandbox::kNoSandbox:
-      SetPledge(NULL, "/etc/chromium/pledge.main");
+      SetPledge(NULL, "/etc/electron/pledge.main");
       break;
     case sandbox::mojom::Sandbox::kRenderer:
       // prot_exec needed by v8
@@ -337,13 +336,13 @@ bool SandboxLinux::InitializeSandbox(sandbox::mojom::S
       break;
 #endif
     case sandbox::mojom::Sandbox::kAudio:
-      SetPledge(NULL, "/etc/chromium/pledge.utility_audio");
+      SetPledge(NULL, "/etc/electron/pledge.utility_audio");
       break;
     case sandbox::mojom::Sandbox::kNetwork:
-      SetPledge(NULL, "/etc/chromium/pledge.utility_network");
+      SetPledge(NULL, "/etc/electron/pledge.utility_network");
       break;
     case sandbox::mojom::Sandbox::kVideoCapture:
-      SetPledge(NULL, "/etc/chromium/pledge.utility_video");
+      SetPledge(NULL, "/etc/electron/pledge.utility_video");
       break;
     case sandbox::mojom::Sandbox::kUtility:
     case sandbox::mojom::Sandbox::kService:
