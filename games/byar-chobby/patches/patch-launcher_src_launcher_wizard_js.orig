Index: launcher/src/launcher_wizard.js
--- launcher/src/launcher_wizard.js.orig
+++ launcher/src/launcher_wizard.js
@@ -103,16 +103,17 @@ class Wizard extends EventEmitter {
 				});
 			});
 
-			config.downloads.engines.forEach((engine) => {
-				steps.push({
-					name: 'engine',
-					item: engine,
-					action: () => {
-						this.isActive = true;
-						springDownloader.downloadEngine(engine);
-					}
-				});
-			});
+			// XXX skip engine, use system engine
+			// config.downloads.engines.forEach((engine) => {
+			// 	steps.push({
+			// 		name: 'engine',
+			// 		item: engine,
+			// 		action: () => {
+			// 			this.isActive = true;
+			// 			springDownloader.downloadEngine(engine);
+			// 		}
+			// 	});
+			// });
 
 			if (config.downloads.games && config.downloads.games.length > 0) {
 				steps.push({
@@ -266,14 +267,15 @@ class Wizard extends EventEmitter {
 		}
 
 		let enginePath;
-		if (config.launch.engine_path != null) {
-			enginePath = config.launch.engine_path;
-		} else {
-			const engineName = config.launch.engine || config.downloads.engines[0];
-			if (engineName != null) {
-				enginePath = path.join(springPlatform.writePath, 'engine', engineName, springPlatform.springBin);
-			}
-		}
+		// if (config.launch.engine_path != null) {
+		// 	enginePath = config.launch.engine_path;
+		// } else {
+		// 	const engineName = config.launch.engine || config.downloads.engines[0];
+		// 	if (engineName != null) {
+		// 		enginePath = path.join(springPlatform.writePath, 'engine', engineName, springPlatform.springBin);
+		// 	}
+		// }
+		enginePath = '/usr/local/bin/spring';
 		if (enginePath != null) {
 			steps.push({
 				name: 'start',
