Index: ringrtc/src/webrtc/src/modules/audio_device/audio_device_impl.cc
--- ringrtc/src/webrtc/src/modules/audio_device/audio_device_impl.cc.orig
+++ ringrtc/src/webrtc/src/modules/audio_device/audio_device_impl.cc
@@ -27,7 +27,7 @@
 #elif defined(WEBRTC_ANDROID)
 #include <stdlib.h>
 #include "sdk/android/native_api/audio_device_module/audio_device_android.h"
-#elif defined(WEBRTC_LINUX)
+#elif defined(WEBRTC_LINUX) && !defined(WEBRTC_OPENBSD)
 #if defined(WEBRTC_ENABLE_LINUX_ALSA)
 #include "modules/audio_device/linux/audio_device_alsa_linux.h"
 #endif
@@ -39,6 +39,9 @@
 #elif defined(WEBRTC_MAC)
 #include "modules/audio_device/mac/audio_device_mac.h"
 #endif
+#if defined(WEBRTC_OPENBSD)
+#include "modules/audio_device/sndio/audio_device_sndio.h"
+#endif
 #if defined(WEBRTC_DUMMY_FILE_DEVICES)
 #include "modules/audio_device/dummy/file_audio_device.h"
 #include "modules/audio_device/dummy/file_audio_device_factory.h"
@@ -141,7 +144,7 @@ int32_t AudioDeviceModuleImpl::CheckPlatform() {
 #elif defined(WEBRTC_ANDROID)
   platform = kPlatformAndroid;
   RTC_LOG(LS_INFO) << "current platform is Android";
-#elif defined(WEBRTC_LINUX)
+#elif defined(WEBRTC_LINUX) && !defined(WEBRTC_OPENBSD)
   platform = kPlatformLinux;
   RTC_LOG(LS_INFO) << "current platform is Linux";
 #elif defined(WEBRTC_IOS)
@@ -153,6 +156,9 @@ int32_t AudioDeviceModuleImpl::CheckPlatform() {
 #elif defined(WEBRTC_FUCHSIA)
   platform = kPlatformFuchsia;
   RTC_LOG(LS_INFO) << "current platform is Fuchsia";
+#elif defined(WEBRTC_OPENBSD)
+  platform = kPlatformOpenBSD;
+  RTC_LOG(LS_INFO) << "current platform is OpenBSD";
 #endif
   if (platform == kPlatformNotSupported) {
     RTC_LOG(LS_ERROR)
@@ -205,7 +211,7 @@ int32_t AudioDeviceModuleImpl::CreatePlatformSpecificO
 // 'rtc_include_pulse_audio' build flag.
 // TODO(bugs.webrtc.org/9127): improve support and make it more clear that
 // PulseAudio is the default selection.
-#if !defined(WEBRTC_ANDROID) && defined(WEBRTC_LINUX)
+#if !defined(WEBRTC_ANDROID) && defined(WEBRTC_LINUX) && !defined(WEBRTC_OPENBSD)
 #if !defined(WEBRTC_ENABLE_LINUX_PULSE)
   // Build flag 'rtc_include_pulse_audio' is set to false. In this mode:
   // - kPlatformDefaultAudio => ALSA, and
@@ -252,6 +258,14 @@ int32_t AudioDeviceModuleImpl::CreatePlatformSpecificO
     RTC_LOG(LS_INFO) << "Mac OS X Audio APIs will be utilized.";
   }
 #endif  // WEBRTC_MAC
+
+// Sndio ADM implementation.
+#if defined(WEBRTC_OPENBSD)
+  if (audio_layer == kPlatformDefaultAudio) {
+    audio_device_.reset(new AudioDeviceSndio());
+    RTC_LOG(LS_INFO) << "Sndio Audio APIs will be utilized.";
+  }
+#endif  // WEBRTC_OPENBSD
 
   // Dummy ADM implementation.
   if (audio_layer == kDummyAudio) {
